## Autogenerated by Scribe. DO NOT MODIFY.

name: Authentication
description: |-

  APIs for managing authentication
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/auth/login
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for managing authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Login User'
      description: 'Authenticate the user and return an access token.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: "The user's email."
        required: true
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: "The user's password."
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: john@example.com
      password: password123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Login success",
            "data": {
              "user": {
                "id": 1,
                "name": "John Doe",
                "email": "john@example.com",
                "username": "johndoe",
                "role": "user"
              },
              "token": "your_generated_token_here"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "status": "error",
            "message": "Invalid credentials"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/logout
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for managing authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout User'
      description: "Revoke the user's access token and log them out."
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer your_generated_token_here'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Logout success",
            "data": []
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/auth/me
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for managing authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Authenticated User'
      description: "Retrieve the authenticated user's details."
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer your_generated_token_here'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "User retrieved successfully",
            "data": {
              "user": {
                "id": 1,
                "name": "John Doe",
                "email": "john@example.com",
                "username": "johndoe",
                "role": "user"
              },
              "token": "your_generated_token_here"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
