## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Disaster Program Management'
description: |-

  APIs for managing disaster programs
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/disaster-programs
    metadata:
      groupName: 'Disaster Program Management'
      groupDescription: |-

        APIs for managing disaster programs
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a list of disaster programs.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Optional. The page number.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Optional. Items per page.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 10
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Programs retrieved successfully.",
            "data": [
              {
                "id": 1,
                "name": "Emergency Training",
                "description": "Training program for emergency response.",
                "category_id": 2,
                "disaster_id": 3,
                "created_at": "2024-10-20T10:00:00Z",
                "updated_at": "2024-10-20T10:00:00Z"
              },
              ...
            ]
          }
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/disaster-programs
    metadata:
      groupName: 'Disaster Program Management'
      groupDescription: |-

        APIs for managing disaster programs
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new disaster program.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the program.'
        required: true
        example: '"Health and Safety Training"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the program.'
        required: false
        example: '"Safety training for first responders."'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      category_id:
        name: category_id
        description: 'The ID of the program category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      disaster_id:
        name: disaster_id
        description: 'The ID of the disaster.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"Health and Safety Training"'
      description: '"Safety training for first responders."'
      category_id: 1
      disaster_id: 3
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "status": "success",
            "message": "Program created successfully.",
            "data": {
              "id": 1,
              "name": "Health and Safety Training",
              "description": "Safety training for first responders.",
              "category_id": 1,
              "disaster_id": 3,
              "created_at": "2024-10-20T10:00:00Z",
              "updated_at": "2024-10-20T10:00:00Z"
            }
          }
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/disaster-programs/{id}'
    metadata:
      groupName: 'Disaster Program Management'
      groupDescription: |-

        APIs for managing disaster programs
      subgroup: ''
      subgroupDescription: ''
      title: 'Show a specific disaster program.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the program.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Program retrieved successfully.",
            "data": {
              "id": 1,
              "name": "Health and Safety Training",
              "description": "Safety training for first responders.",
              "category_id": 1,
              "disaster_id": 3,
              "created_at": "2024-10-20T10:00:00Z",
              "updated_at": "2024-10-20T10:00:00Z"
            }
          }
        headers: []
        description: Success
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "Program not found"
          }
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/disaster-programs/{id}'
    metadata:
      groupName: 'Disaster Program Management'
      groupDescription: |-

        APIs for managing disaster programs
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a specific disaster program.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the program.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the program.'
        required: false
        example: '"Updated Program Name"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the program.'
        required: false
        example: '"Updated program description."'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      category_id:
        name: category_id
        description: 'The ID of the program category.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      disaster_id:
        name: disaster_id
        description: 'The ID of the disaster.'
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"Updated Program Name"'
      description: '"Updated program description."'
      category_id: 1
      disaster_id: 3
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Program updated successfully.",
            "data": {
              "id": 1,
              "name": "Updated Program Name",
              "description": "Updated program description.",
              "category_id": 1,
              "disaster_id": 3,
              "created_at": "2024-10-20T10:00:00Z",
              "updated_at": "2024-10-20T10:00:00Z"
            }
          }
        headers: []
        description: Success
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "Program not found"
          }
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/disaster-programs/{id}'
    metadata:
      groupName: 'Disaster Program Management'
      groupDescription: |-

        APIs for managing disaster programs
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a specific disaster program.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the program.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Program deleted successfully."
          }
        headers: []
        description: Success
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "Program not found"
          }
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
