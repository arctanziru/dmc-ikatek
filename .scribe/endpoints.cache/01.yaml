## Autogenerated by Scribe. DO NOT MODIFY.

name: 'News Categories'
description: |-

  APIs for managing news categories
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/news-category
    metadata:
      groupName: 'News Categories'
      groupDescription: |-

        APIs for managing news categories
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a list of news categories.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      search:
        name: search
        description: 'Search term.'
        required: false
        example: technology
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      page:
        name: page
        description: 'Page number.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Items per page.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      search: technology
      page: 1
      per_page: 10
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "name": "Technology",
                "created_at": "2023-01-01T00:00:00.000000Z",
                "updated_at": "2023-01-01T00:00:00.000000Z"
              }
            ],
            "links": {
              "first": "http://example.com/news-categories?page=1",
              "last": "http://example.com/news-categories?page=1",
              "prev": null,
              "next": null
            },
            "meta": {
              "current_page": 1,
              "from": 1,
              "last_page": 1,
              "path": "http://example.com/news-categories",
              "per_page": 10,
              "to": 1,
              "total": 1
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/news-category
    metadata:
      groupName: 'News Categories'
      groupDescription: |-

        APIs for managing news categories
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new news category.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the news category.'
        required: true
        example: Technology
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: Technology
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "status": "success",
            "message": "News Category created successfully."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/news-category/{id}'
    metadata:
      groupName: 'News Categories'
      groupDescription: |-

        APIs for managing news categories
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific news category.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the news category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "News Category retrieved successfully.",
            "data": {
              "id": 1,
              "name": "Technology",
              "created_at": "2023-01-01T00:00:00.000000Z",
              "updated_at": "2023-01-01T00:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "News Category not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/news-category/{id}'
    metadata:
      groupName: 'News Categories'
      groupDescription: |-

        APIs for managing news categories
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a specific news category.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the news category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the news category.'
        required: true
        example: Technology
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: Technology
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "News Category updated successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "News Category not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/news-category/{id}'
    metadata:
      groupName: 'News Categories'
      groupDescription: |-

        APIs for managing news categories
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified news category from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the news category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "News Category deleted successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "News Category not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
