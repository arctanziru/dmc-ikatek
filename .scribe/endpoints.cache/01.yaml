## Autogenerated by Scribe. DO NOT MODIFY.

name: 'News Management'
description: |-

  APIs for managing news
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/news
    metadata:
      groupName: 'News Management'
      groupDescription: |-

        APIs for managing news
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a list of news articles.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Optional. The page number.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Optional. Items per page.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      news_category_id:
        name: news_category_id
        description: 'Optional. Filter by category ID.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      search:
        name: search
        description: 'Optional. Search by title or content.'
        required: false
        example: '"climate"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 10
      news_category_id: 2
      search: '"climate"'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "News retrieved successfully.",
            "data": {
              "items": [
                {
                  "id": 1,
                  "title": "Climate News",
                  "description": "Short description",
                  "content": "This is the content.",
                  "author": "John Doe",
                  "news_category_id": 2,
                  "created_at": "2024-10-20T10:00:00Z",
                  "updated_at": "2024-10-20T10:00:00Z"
                }
              ],
              "pagination": {
                "total": 50,
                "count": 10,
                "per_page": 10,
                "current_page": 1,
                "total_pages": 5
              }
            }
          }
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/news
    metadata:
      groupName: 'News Management'
      groupDescription: |-

        APIs for managing news
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created news article in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the news article.'
        required: true
        example: '"New Climate Policy"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      image:
        name: image
        description: 'The URL of the image.'
        required: false
        example: '"http://example.com/image.jpg"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      description:
        name: description
        description: 'A short description of the news article.'
        required: false
        example: '"This is a short description."'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      content:
        name: content
        description: 'The content of the news article.'
        required: true
        example: '"This is the content of the news article."'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      author:
        name: author
        description: 'The author of the news article.'
        required: false
        example: '"Jane Doe"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      news_category_id:
        name: news_category_id
        description: 'The ID of the category.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: '"New Climate Policy"'
      image: '"http://example.com/image.jpg"'
      description: '"This is a short description."'
      content: '"This is the content of the news article."'
      author: '"Jane Doe"'
      news_category_id: 2
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "status": "success",
            "message": "News created successfully.",
            "data": {
              "id": 1,
              "title": "New Climate Policy",
              "image": "http://example.com/image.jpg",
              "description": "This is a short description.",
              "content": "This is the content of the news article.",
              "author": "Jane Doe",
              "news_category_id": 2,
              "created_at": "2024-10-20T10:00:00Z",
              "updated_at": "2024-10-20T10:00:00Z"
            }
          }
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/news/{id}'
    metadata:
      groupName: 'News Management'
      groupDescription: |-

        APIs for managing news
      subgroup: ''
      subgroupDescription: ''
      title: 'Show the specified news article.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the news article.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "News retrieved successfully.",
            "data": {
              "id": 1,
              "title": "Climate News",
              "description": "Short description",
              "content": "This is the content.",
              "author": "John Doe",
              "news_category_id": 2,
              "created_at": "2024-10-20T10:00:00Z",
              "updated_at": "2024-10-20T10:00:00Z"
            }
          }
        headers: []
        description: Success
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "News not found"
          }
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/news/{id}'
    metadata:
      groupName: 'News Management'
      groupDescription: |-

        APIs for managing news
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified news article in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the news article.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the news article.'
        required: false
        example: '"Updated Climate Policy"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      image:
        name: image
        description: 'The URL of the image.'
        required: false
        example: '"http://example.com/image.jpg"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      description:
        name: description
        description: 'A short description of the news article.'
        required: false
        example: '"This is an updated short description."'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      content:
        name: content
        description: 'The content of the news article.'
        required: false
        example: '"This is the updated content of the news article."'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      author:
        name: author
        description: 'The author of the news article.'
        required: false
        example: '"Jane Doe"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      news_category_id:
        name: news_category_id
        description: 'The ID of the category.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: '"Updated Climate Policy"'
      image: '"http://example.com/image.jpg"'
      description: '"This is an updated short description."'
      content: '"This is the updated content of the news article."'
      author: '"Jane Doe"'
      news_category_id: 2
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "News updated successfully.",
            "data": {
              "id": 1,
              "title": "Updated Climate Policy",
              "image": "http://example.com/image.jpg",
              "description": "This is an updated short description.",
              "content": "This is the updated content of the news article.",
              "author": "Jane Doe",
              "news_category_id": 2,
              "created_at": "2024-10-20T10:00:00Z",
              "updated_at": "2024-10-20T10:00:00Z"
            }
          }
        headers: []
        description: Success
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "News not found"
          }
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/news/{id}'
    metadata:
      groupName: 'News Management'
      groupDescription: |-

        APIs for managing news
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified news article from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the news article.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "News deleted successfully."
          }
        headers: []
        description: Success
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "News not found"
          }
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
