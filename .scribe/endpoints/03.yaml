name: 'Disaster Management'
description: |-

  APIs for managing disasters
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/disasters
    metadata:
      groupName: 'Disaster Management'
      groupDescription: |-

        APIs for managing disasters
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a list of disasters.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Optional. The page number.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Optional. Items per page.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      district_id:
        name: district_id
        description: 'Optional. Filter by district ID.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      city_id:
        name: city_id
        description: 'Optional. Filter by city ID.'
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      province_id:
        name: province_id
        description: 'Optional. Filter by province ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      search:
        name: search
        description: 'Optional. Search by name or description.'
        required: false
        example: '"earthquake"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 10
      district_id: 2
      city_id: 3
      province_id: 1
      search: '"earthquake"'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Disasters retrieved successfully.",
            "data": {
              "items": [
                {
                  "id": 1,
                  "name": "Earthquake",
                  "description": "A major earthquake",
                  "latitude": -6.2088,
                  "longitude": 106.8456,
                  "district_id": 2,
                  "created_at": "2024-10-20T10:00:00Z",
                  "updated_at": "2024-10-20T10:00:00Z"
                }
              ],
              "pagination": {
                "total": 50,
                "count": 10,
                "per_page": 10,
                "current_page": 1,
                "total_pages": 5
              }
            }
          }
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/disasters
    metadata:
      groupName: 'Disaster Management'
      groupDescription: |-

        APIs for managing disasters
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created disaster.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the disaster.'
        required: true
        example: '"Earthquake"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the disaster.'
        required: false
        example: '"A severe earthquake"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      latitude:
        name: latitude
        description: 'The latitude of the disaster location.'
        required: false
        example: '-6.2088'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      longitude:
        name: longitude
        description: 'The longitude of the disaster location.'
        required: false
        example: '106.8456'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      district_id:
        name: district_id
        description: 'The ID of the district.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"Earthquake"'
      description: '"A severe earthquake"'
      latitude: '-6.2088'
      longitude: '106.8456'
      district_id: 2
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "status": "success",
            "message": "Disaster created successfully.",
            "data": {
              "id": 1,
              "name": "Earthquake",
              "description": "A severe earthquake",
              "latitude": -6.2088,
              "longitude": 106.8456,
              "district_id": 2,
              "created_at": "2024-10-20T10:00:00Z",
              "updated_at": "2024-10-20T10:00:00Z"
            }
          }
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/disasters/{id}'
    metadata:
      groupName: 'Disaster Management'
      groupDescription: |-

        APIs for managing disasters
      subgroup: ''
      subgroupDescription: ''
      title: 'Show a specific disaster.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the disaster.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Disaster retrieved successfully.",
            "data": {
              "id": 1,
              "name": "Earthquake",
              "description": "A major earthquake",
              "latitude": -6.2088,
              "longitude": 106.8456,
              "district_id": 2,
              "created_at": "2024-10-20T10:00:00Z",
              "updated_at": "2024-10-20T10:00:00Z"
            }
          }
        headers: []
        description: Success
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "Disaster not found"
          }
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/disasters/{id}'
    metadata:
      groupName: 'Disaster Management'
      groupDescription: |-

        APIs for managing disasters
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a specific disaster.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the disaster.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the disaster.'
        required: false
        example: '"Updated Earthquake"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the disaster.'
        required: false
        example: '"An updated description"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      latitude:
        name: latitude
        description: 'The latitude of the disaster location.'
        required: false
        example: '-6.2088'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      longitude:
        name: longitude
        description: 'The longitude of the disaster location.'
        required: false
        example: '106.8456'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      district_id:
        name: district_id
        description: 'The ID of the district.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"Updated Earthquake"'
      description: '"An updated description"'
      latitude: '-6.2088'
      longitude: '106.8456'
      district_id: 2
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Disaster updated successfully.",
            "data": {
              "id": 1,
              "name": "Updated Earthquake",
              "description": "An updated description",
              "latitude": -6.2088,
              "longitude": 106.8456,
              "district_id": 2,
              "created_at": "2024-10-20T10:00:00Z",
              "updated_at": "2024-10-20T10:00:00Z"
            }
          }
        headers: []
        description: Success
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "Disaster not found"
          }
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/disasters/{id}'
    metadata:
      groupName: 'Disaster Management'
      groupDescription: |-

        APIs for managing disasters
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a specific disaster.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the disaster.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Disaster deleted successfully."
          }
        headers: []
        description: Success
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "Disaster not found"
          }
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
