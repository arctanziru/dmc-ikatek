name: 'Donation Management'
description: |-

  APIs for managing donations
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/donations
    metadata:
      groupName: 'Donation Management'
      groupDescription: |-

        APIs for managing donations
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a list of donations for a specific disaster program.'
      description: 'Retrieve all donations related to a particular disaster program, with optional filtering by `status` and `donation_date`.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      disaster_program_id:
        name: disaster_program_id
        description: 'The ID of the disaster program.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'Optional. The status of donations to retrieve. One of "pending", "verified", or "rejected".'
        required: false
        example: '"verified"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      donation_date:
        name: donation_date
        description: 'date Optional. The specific donation date to filter. Format: Y-m-d.'
        required: false
        example: '"2024-10-20"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      disaster_program_id: 1
      status: '"verified"'
      donation_date: '"2024-10-20"'
    bodyParameters:
      disaster_program_id:
        name: disaster_program_id
        description: 'The <code>id</code> of an existing record in the disaster_programs table.'
        required: true
        example: consequuntur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      disaster_program_id: consequuntur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Donations retrieved successfully.",
            "data": [
              {
                "id": 1,
                "donor_name": "Jane Doe",
                "donor_organization": "Helping Hands",
                "donor_email": "jane@example.com",
                "amount": 100.00,
                "message": "Hope this helps!",
                "transfer_evidence": "/storage/evidence/evidence.jpg",
                "status": "verified",
                "donation_date": "2024-10-20",
                "disaster_program_id": 1,
                "created_at": "2024-10-20T10:00:00Z"
              },
              ...
            ]
          }
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/donations
    metadata:
      groupName: 'Donation Management'
      groupDescription: |-

        APIs for managing donations
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new donation.'
      description: 'Create a new donation entry for a specific disaster program, with optional details such as `donor_organization`, `donor_email`, `message`, and `transfer_evidence`.'
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      donor_name:
        name: donor_name
        description: 'The name of the donor.'
        required: true
        example: '"Jane Doe"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      donor_organization:
        name: donor_organization
        description: 'The organization name if applicable.'
        required: false
        example: '"Helping Hands"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      donor_email:
        name: donor_email
        description: 'The email of the donor.'
        required: false
        example: '"jane@example.com"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      amount:
        name: amount
        description: 'The amount of the donation.'
        required: true
        example: 100.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      message:
        name: message
        description: 'The message from the donor.'
        required: false
        example: '"Hope this helps!"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      transfer_evidence:
        name: transfer_evidence
        description: 'The transfer evidence (JPEG, PNG, JPG, PDF).'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      status:
        name: status
        description: 'The donation status. One of "pending", "verified", or "rejected".'
        required: false
        example: '"pending"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      donation_date:
        name: donation_date
        description: 'The date of the donation.'
        required: false
        example: '"2024-10-20"'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      disaster_program_id:
        name: disaster_program_id
        description: 'The ID of the disaster program.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      donor_name: '"Jane Doe"'
      donor_organization: '"Helping Hands"'
      donor_email: '"jane@example.com"'
      amount: 100.0
      message: '"Hope this helps!"'
      status: '"pending"'
      donation_date: '"2024-10-20"'
      disaster_program_id: 1
    fileParameters:
      transfer_evidence: null
    responses:
      -
        status: 201
        content: |-
          {
            "status": "success",
            "message": "Donation created successfully.",
            "data": {
              "id": 1,
              "donor_name": "Jane Doe",
              "donor_organization": "Helping Hands",
              "donor_email": "jane@example.com",
              "amount": 100.00,
              "message": "Hope this helps!",
              "transfer_evidence": "http://example.com/image.jpg",
              "status": "pending",
              "donation_date": "2024-10-20",
              "disaster_program_id": 1,
              "created_at": "2024-10-20T10:00:00Z"
            }
          }
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/donations/{id}'
    metadata:
      groupName: 'Donation Management'
      groupDescription: |-

        APIs for managing donations
      subgroup: ''
      subgroupDescription: ''
      title: 'Show a specific donation.'
      description: 'Retrieve details of a specific donation by its ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the donation.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Donation retrieved successfully.",
            "data": {
              "id": 1,
              "donor_name": "Jane Doe",
              "donor_organization": "Helping Hands",
              "donor_email": "jane@example.com",
              "amount": 100.00,
              "message": "Hope this helps!",
              "transfer_evidence": "/storage/evidence/evidence.jpg",
              "status": "verified",
              "donation_date": "2024-10-20",
              "disaster_program_id": 1,
              "created_at": "2024-10-20T10:00:00Z"
            }
          }
        headers: []
        description: Success
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "Donation not found"
          }
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
